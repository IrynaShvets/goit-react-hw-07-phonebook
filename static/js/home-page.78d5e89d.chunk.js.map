{"version":3,"file":"static/js/home-page.78d5e89d.chunk.js","mappings":"uRAEaA,EAAOC,EAAAA,GAAAA,KAAH,+GAOJC,EAAQD,EAAAA,GAAAA,MAAH,kKASLE,EAAQF,EAAAA,GAAAA,MAAH,+LAWLG,GAAcH,EAAAA,EAAAA,IAAOE,EAAPF,CAAH,gDAIXI,EAASJ,EAAAA,GAAAA,OAAH,gd,SCuEnB,MA/FA,WACE,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAoCC,EAAAA,EAAAA,MAApC,eAAOC,EAAP,KAAqBC,EAArB,KAAqBA,UACPC,GAAaC,EAAAA,EAAAA,MAAnBC,KAEFC,GAAcC,EAAAA,EAAAA,MACdC,GAAgBD,EAAAA,EAAAA,MAEhBE,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBjB,EAAR,EAAQA,KAAMkB,EAAd,EAAcA,MAEd,OAAQlB,GACN,IAAK,OACHC,EAAQiB,GACR,MACF,IAAK,QACHf,EAASe,KAQTC,GAAeC,EAAAA,EAAAA,cACnB,SAAAJ,GACEA,EAAEK,iBACF,IAAMC,EAAiBtB,EAAKuB,cACtBC,EAAmBf,EAASgB,MAAK,SAAAC,GAAO,OAC5CA,EAAQ1B,KAAKuB,cAAcI,SAASL,MAGlCE,IACFvB,EAAQ,IACRE,EAAS,IACTyB,EAAAA,GAAAA,KAAA,UAAc5B,EAAd,8BAGGwB,IACHvB,EAAQ,IACRE,EAAS,IACTI,EAAW,CAAEP,KAAAA,EAAME,MAAAA,IACnB0B,EAAAA,GAAAA,QAAA,UAAiB5B,EAAjB,qBAAkCE,EAAlC,wBACAE,EAAS,YAAa,CAAEyB,SAAS,OAGrC,CAAC7B,EAAME,EAAOK,EAAYH,EAAUK,IAGtC,OACE,+BACE,UAAChB,EAAD,CAAMqC,SAAUX,EAAhB,WACE,SAACxB,EAAD,CAAOoC,QAASnB,EAAhB,mBAEA,SAAChB,EAAD,CACEoC,KAAK,OACLhC,KAAK,OACLkB,MAAOlB,EACP+B,QAASnB,EACTqB,SAAUlB,EACVmB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAGV,SAACzC,EAAD,CAAOoC,QAASjB,EAAhB,qBAEA,SAACjB,EAAD,CACEmC,KAAK,MACLhC,KAAK,QACLkB,MAAOhB,EACP6B,QAASjB,EACTmB,SAAUlB,EACVmB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAGV,UAACtC,EAAD,CAAQkC,KAAK,SAASK,SAAU7B,EAAhC,WACE,SAAC,MAAD,CACE8B,MAAO,CACLC,MAAO,GACPC,OAAQ,MAET,IANL,uBChFR,MARA,WACE,OACE,+BACE,SAAC,EAAD,Q,sLCLOC,EAAY,SAAAC,GAAK,OAAIA,EAAMjC,U","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/HomePage.js","redux/contacts-selectors.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-top: 20px;\r\n  border: 0;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: inline-flex;\r\n  justify-content: flex-start;\r\n  margin-bottom: 10px;\r\n  color: #fff;\r\n  font-size: 25px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 460px;\r\n  height: 40px;\r\n  outline: none;\r\n  border: 0;\r\n  border-bottom: 1px solid #000;\r\n  margin-bottom: 20px;\r\n  padding: 10px 30px;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const InputBottom = styled(Input)`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 170px;\r\n  height: 40px;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  border: 0;\r\n  color: #011b27;\r\n  background-color: #fff;\r\n\r\n  &:hover {\r\n    color: #fff;\r\n    background-color: #264d5f;\r\n    box-shadow: 1px 2px 1px #011b27, 3px 5px 4px #264d5f;\r\n    transition: all 400ms cubic-bezier(0.4, 0, 0.3, 1);\r\n  }\r\n`;\r\n","import { useState, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { BsTelephonePlus } from 'react-icons/bs';\r\nimport { nanoid } from 'nanoid';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport { useGetContactsByNameQuery, useAddContactMutation } from '../../redux';\r\nimport { Form, Label, Input, InputBottom, Button } from './ContactForm.styled';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const [addContact, { isLoading }] = useAddContactMutation();\r\n  const { data: contacts } = useGetContactsByNameQuery();\r\n\r\n  const nameInputId = nanoid();\r\n  const numberInputId = nanoid();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'phone':\r\n        setPhone(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      const normalizedName = name.toLowerCase();\r\n      const isNameInContacts = contacts.some(contact =>\r\n        contact.name.toLowerCase().includes(normalizedName),\r\n      );\r\n\r\n      if (isNameInContacts) {\r\n        setName('');\r\n        setPhone('');\r\n        toast.warn(`${name} is already in contacts.`);\r\n      }\r\n\r\n      if (!isNameInContacts) {\r\n        setName('');\r\n        setPhone('');\r\n        addContact({ name, phone });\r\n        toast.success(`${name} with tel:${phone} added to contacts.`);\r\n        navigate('/contacts', { replace: true });\r\n      }\r\n    },\r\n    [name, phone, addContact, navigate, contacts],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Label htmlFor={nameInputId}>Name</Label>\r\n\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          htmlFor={nameInputId}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n\r\n        <Label htmlFor={numberInputId}>Number</Label>\r\n\r\n        <InputBottom\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          value={phone}\r\n          htmlFor={numberInputId}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n\r\n        <Button type=\"submit\" disabled={isLoading}>\r\n          <BsTelephonePlus\r\n            style={{\r\n              width: 30,\r\n              height: 30,\r\n            }}\r\n          />{' '}\r\n          Add contact\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import ContactForm from '../components/ContactForm';\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <>\r\n      <ContactForm />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","export const getFilter = state => state.contacts;\r\n"],"names":["Form","styled","Label","Input","InputBottom","Button","useState","name","setName","phone","setPhone","navigate","useNavigate","useAddContactMutation","addContact","isLoading","contacts","useGetContactsByNameQuery","data","nameInputId","nanoid","numberInputId","handleChange","e","currentTarget","value","handleSubmit","useCallback","preventDefault","normalizedName","toLowerCase","isNameInContacts","some","contact","includes","toast","replace","onSubmit","htmlFor","type","onChange","pattern","title","required","disabled","style","width","height","getFilter","state"],"sourceRoot":""}